name: Auto release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  workflow_dispatch:


jobs:

  #make shamrock documentation
  make_documentation:
    name: "Build : Documentation"
    uses: ./.github/workflows/make_documentation.yml


  shamrock_linux_acpp_cov:
    name: Shamrock Test
    uses: ./.github/workflows/shamrock-acpp-clang15-coverage.yml
    


  upload_doc:

    if: github.ref == 'refs/heads/main'
    needs: [shamrock_linux_acpp_cov, make_documentation]

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write


    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: 'Download Doc'
        uses: actions/download-artifact@v3
        with:
          name: shamrock_documentation

      - name: ls local
        run : ls -la

      - name: 'Extract Doc'
        run: |
          tar -xvf documentation.tar.gz

      - name: ls local
        run : ls -la

      - name: 'Clean Files'
        run: |
          rm documentation.tar.gz
          mv doc/_build/* .
          rm -r doc

      #- name: 'Delete Doxygen'
      #  run: rm -rf doxygen
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1



  deploy_page:

    if: github.ref == 'refs/heads/main'

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: upload_doc
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2




  publish_release:

    runs-on: [self-hosted, raw]
    
    needs: [shamrock_linux_acpp_cov, make_documentation]

    if: github.ref == 'refs/heads/main'

    steps:

      - uses: actions/checkout@v3
        with:
          submodules: recursive


      - name: 'Download Doc'
        uses: actions/download-artifact@v3
        with:
          name: shamrock_documentation

      - name: 'Download coverage list'
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-list-acpp_omp_debug
          path: code-coverage-list-acpp_omp_debug

      - name: 'Download coverage list'
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report-acpp_omp_debug
          path: code-coverage-report-acpp_omp_debug

      
      - name: 'Tar coverage'
        run: tar -cvf coverage.tar.gz code-coverage-list-acpp_omp_debug code-coverage-report-acpp_omp_debug


      - name: ls local
        run : ls -la

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Current Build"
          files: |
            LICENSE
            documentation.tar.gz
            coverage.tar.gz
