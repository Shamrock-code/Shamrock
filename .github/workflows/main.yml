name: Linux ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:


  pragma_check:
    name: "Check : (Pragma once)"
    runs-on: [self-hosted, raw]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Pragma check
        run: python buildbot/check_pragma_once.py


  copyright_check:
    name: "Check : (Copyright)"
    runs-on: [self-hosted, raw]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Licence check
        run: python buildbot/check_licencing.py

  
  #make shamrock documentation
  make_documentation:
    name: "Build : Documentation"

    runs-on: [self-hosted, raw]

    needs: [pragma_check, copyright_check]
    
    steps:
      - uses: actions/checkout@v3
      #- uses: actions/setup-python@v4
      #  with:
      #    python-version: '3.10' 

      - name: pip install packages
        run: pip install -U jupyter-book sphinx_proof matplotlib numpy

      - name : Install pck (doxygen)
        run: |
          sudo apt-get install -y -qq doxygen

      - name: Gen doc
        run: |
          cd doc
          sh make_doc.sh

      - name: 'Tar doc'
        run: tar -cvf documentation.tar.gz doc/_build

      - name: Archive generated doc
        uses: actions/upload-artifact@v3
        with:
          name: shamrock_documentation
          path: documentation.tar.gz



  linux_opensycl:
    name: Build OpenSYCL
    needs: [pragma_check, copyright_check]
    uses: ./.github/workflows/linux-build-opensycl.yml

  shamrock_linux_opensycl:
    name: Shamrock Test
    needs: [pragma_check, copyright_check,linux_opensycl]
    uses: ./.github/workflows/shamrock-opensycl.yml
    


  ### build jobs

  linux_dpcpp:
    name: Build DPCPP
    needs: [pragma_check, copyright_check]
    uses: ./.github/workflows/linux-build-dpcpp.yml

  shamrock_linux_dpcpp:
    name: Shamrock Test
    needs: [pragma_check, copyright_check,linux_dpcpp]
    uses: ./.github/workflows/shamrock-dpcpp.yml
  

  #shamrock_linux_opensycl_macos:
  #  needs: [pragma_check, copyright_check]
  #  uses: ./.github/workflows/macos-opensycl.yml
  #  with:
  #    os: ${{ matrix.os }}
  #  strategy:
  #    matrix:
  #      os: [macos-latest]


  upload_doc:

    if: github.ref == 'refs/heads/main'
    needs: [shamrock_linux_opensycl, shamrock_linux_dpcpp, make_documentation]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
        

      - name: 'Download Doc'
        uses: actions/download-artifact@v3
        with:
          name: shamrock_documentation
          path: documentation.tar.gz

      - name: 'Extract Doc'
        run: |
          tar -xvf documentation.tar.gz
          rm documentation.tar.gz
          mv doc/_build/* .
          rm -r doc

      - name: 'Delete Doxygen'
        run: rm -rf doxygen
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1



  deploy_page:

    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: upload_doc
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  publish_release:

    runs-on: [self-hosted, raw]
    
    needs: [shamrock_linux_opensycl, shamrock_linux_dpcpp, make_documentation]

    if: github.ref == 'refs/heads/main'

    steps:

      - uses: actions/checkout@v3
        with:
          submodules: recursive


      - name: 'Download Doc'
        uses: actions/download-artifact@v3
        with:
          name: shamrock_documentation

      - name: 'Download coverage list'
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-list-opensycl_omp_debug
          path: code-coverage-list-opensycl_omp_debug

      - name: 'Download coverage list'
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report-opensycl_omp_debug
          path: code-coverage-report-opensycl_omp_debug

      
      - name: 'Tar coverage'
        run: tar -cvf coverage.tar.gz code-coverage-list-opensycl_omp_debug code-coverage-report-opensycl_omp_debug


      - name: ls local
        run : ls -la

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Current Build"
          files: |
            LICENSE
            documentation.tar.gz
            coverage.tar.gz
