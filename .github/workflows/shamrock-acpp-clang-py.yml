name: Acpp/clang (pylib)


on:
  workflow_call:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:


  shamrock_acpp:
    name: AdaptiveCpp clang-${{ matrix.clang }} ${{ matrix.backend }}:${{matrix.arch}} (pylib)
    runs-on: [self-hosted,  docker-runner]

    container:
      image: ${{ matrix.container }}
      

    strategy:
      matrix:
        include: 
          - clang: 15
            cuda: 11.0.2
            rocm: 5.4.3
            backend: omp
            arch: none
            runtest: yes
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
  
    timeout-minutes: 20
    steps:
      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD 
      #### End Checkout part ####
  
      - name: ls local
        run : ls -la
      
      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi
          

      - name: Setup env
        run : ./env/new-env --machine debian-generic.acpp --builddir build --pylib -- --backend ${{ matrix.backend }} --arch ${{ matrix.arch }}

      - name: Pip install Shamrock
        run : |
          cd build
          pip install --verbose -e .

      - name: Try shamrock startup
        run: |
          ACPP_VISIBILITY_MASK=omp \
          ACPP_DEBUG_LEVEL=3 \
          python3 -c "import shamrock;shamrock.change_loglevel(125);shamrock.sys.init(0,0)"