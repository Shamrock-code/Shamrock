name: Shamrock (OpenSYCL)

on:
  workflow_call:


jobs:
  shamrock_opensycl_omp_debug_coverage:
    name: OpenSYCL coverage omp clang-${{ matrix.clang }}
    runs-on: [self-hosted, cuda1102rocm543]

    strategy:
      matrix:
        clang: [15]
        cuda: [11.0.2]
        rocm: [5.4.3]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-clang-${{ matrix.clang }}-${{matrix.cuda}}-${{matrix.rocm}}

      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar

      - name: ls local
        run : ls -la

      - name: install boost
        run: sudo apt install -y libboost-all-dev

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 15
          sudo apt install -y libclang-15-dev clang-tools-15 libomp-15-dev libllvm-15-ocaml-dev libllvm15 llvm-15 llvm-15-dev llvm-15-doc llvm-15-examples llvm-15-runtime

      - name: install Ninja-build
        run: sudo apt install ninja-build

      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build debug \
            --outdir opensycl_omp_debug --cxxpath OpenSYCL_comp --compiler opensycl --profile omp_coverage

      - name: compile Shamrock
        run: |
          cd opensycl_omp_debug
          ninja

      - name: run Shamrock Unittests world_size = 1
        run: |
          cd opensycl_omp_debug
          LLVM_PROFILE_FILE="utests_0_0.profraw" ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest

      - name: run Shamrock Unittests world_size = 2
        run: |
          cd opensycl_omp_debug
          mpirun \
            -n 1 -x LLVM_PROFILE_FILE=utests_2_0.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest : \
            -n 1 -x LLVM_PROFILE_FILE=utests_2_1.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd opensycl_omp_debug
          mpirun --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_0.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest : \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_1.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest : \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_2.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest

      - name: run Shamrock Unittests world_size = 4
        run: |
          cd opensycl_omp_debug
          mpirun --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_0.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_1.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_2.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_3.profraw ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest

      - name: merge coverage reports
        run: |
          cd opensycl_omp_debug
          llvm-profdata-15 merge -sparse utests_* -o utests.profdata

      - name: print coverage
        run: |
          cd opensycl_omp_debug
          llvm-cov-15 report shamrock_test -instr-profile=utests.profdata > coverage_list.txt
          llvm-cov-15 show shamrock_test -instr-profile=utests.profdata -format=html -output-dir=out_cov -Xdemangler c++filt -Xdemangler -n -ignore-filename-regex=".*\Tests.cpp$|.*\Tests.hpp$|.*\shamtest.cpp|.*\shamtest.hpp|.*\main_test.cpp|.*\aliases.hpp"

      - name: Archive code coverage results 1
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-list-opensycl_omp_debug
          path: opensycl_omp_debug/coverage_list.txt

      - name: Archive code coverage results 2
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report-opensycl_omp_debug
          path: opensycl_omp_debug/out_cov/


  shamrock_opensycl_omp:
    name: OpenSYCL omp clang-${{ matrix.clang }}
    runs-on: [self-hosted, cuda1102rocm543]

    strategy:
      matrix:
        clang: [15,16]
        cuda: [11.0.2]
        rocm: [5.4.3]
    #if: false
  
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
  
      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-clang-${{ matrix.clang }}-${{matrix.cuda}}-${{matrix.rocm}}
  
      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar
  
      - name: ls local
        run : ls -la
  
      - name: install boost
        run: sudo apt install libboost-all-dev
  
      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: install Ninja-build
        run: sudo apt install ninja-build
  
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --outdir build --cxxpath OpenSYCL_comp --compiler opensycl --profile omp
  
      - name: compile Shamrock
        run: |
          cd build
          ninja
  
      - name: run Shamrock Unittests world_size = 1
        run: |
          cd build
          ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 2
        run: |
          cd build
          mpirun -n 2 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd build
          mpirun --oversubscribe -n 3 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 4
        run: |
          cd build
          mpirun --oversubscribe -n 4 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest





  shamrock_opensycl_omp_asan:
    name: OpenSYCL omp asan clang-${{ matrix.clang }}
    runs-on: [self-hosted, cuda1102rocm543]

    strategy:
      matrix:
        clang: [15,16]
        cuda: [11.0.2]
        rocm: [5.4.3]
    #if: false
  
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
  
      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-clang-${{ matrix.clang }}-${{matrix.cuda}}-${{matrix.rocm}}
  
      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar
  
      - name: ls local
        run : ls -la
  
      - name: install boost
        run: sudo apt install libboost-all-dev
  
      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: install Ninja-build
        run: sudo apt install ninja-build
  
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build debug \
            --outdir build --cxxpath OpenSYCL_comp --compiler opensycl --profile omp_sanitizer
  
      - name: compile Shamrock
        run: |
          cd build
          ninja
  
      - name: run Shamrock Unittests world_size = 1
        run: |
          cd build
          ASAN_OPTIONS=detect_leaks=0 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 2
        run: |
          cd build
          ASAN_OPTIONS=detect_leaks=0 mpirun -n 2 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd build
          ASAN_OPTIONS=detect_leaks=0 mpirun --oversubscribe -n 3 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 4
        run: |
          cd build
          ASAN_OPTIONS=detect_leaks=0 mpirun --oversubscribe -n 4 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest





  shamrock_opensycl_SSCP:
    name: OpenSYCL sscp clang-${{ matrix.clang }}

    runs-on: [self-hosted, cuda1102rocm543]

    strategy:
      matrix:
        clang: [15,16]
        cuda: [11.0.2]
        rocm: [5.4.3]
    #if: false
  
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
  
      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-clang-${{ matrix.clang }}-${{matrix.cuda}}-${{matrix.rocm}}
  
      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar
  
      - name: ls local
        run : ls -la
  
      - name: install boost
        run: sudo apt install libboost-all-dev
  
      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: install Ninja-build
        run: sudo apt install ninja-build
  
      - name: configure Shamrock
        run: |

          python3 buildbot/configure.py --gen ninja --tests --build release \
            --outdir build --cxxpath OpenSYCL_comp --compiler opensycl --profile generic
  
      - name: compile Shamrock
        run: |
          cd build
          ninja
  
      - name: run Shamrock Unittests world_size = 1
        run: |
          cd build
          ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 2
        run: |
          cd build
          mpirun -n 2 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd build
          mpirun --oversubscribe -n 3 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 4
        run: |
          cd build
          mpirun --oversubscribe -n 4 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest


















  shamrock_opensycl_cuda:
    name: OpenSYCL cuda clang-${{ matrix.clang }}
    runs-on: [self-hosted, cuda1102rocm543]

    strategy:
      matrix:
        clang: [15,16]
        cuda: [11.0.2]
        rocm: [5.4.3]
    #if: false
  
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
  
      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-clang-${{ matrix.clang }}-${{matrix.cuda}}-${{matrix.rocm}}
  
      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar
  
      - name: ls local
        run : ls -la
  
      - name: install boost
        run: sudo apt install libboost-all-dev
  

      #- name: install CUDA
      #  run: |
      #    mkdir -p ~/opt/cuda
      #    wget -q -O cuda.sh http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run
      #    sudo sh ./cuda.sh --override --silent --toolkit --no-man-page --no-drm --no-opengl-libs --installpath=~/opt/cuda || true
      #    echo "CUDA Version ${{matrix.cuda}}" | sudo tee ~/opt/cuda/version.txt
      

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: install Ninja-build
        run: sudo apt install ninja-build
  
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --outdir build --cxxpath OpenSYCL_comp --compiler opensycl --profile cuda-sm70 \
            --cxxflags="--opensycl-cuda-path=/home/docker/opt/cuda"
  
      - name: compile Shamrock
        run: |
          cd build
          ninja
  
      - name: run Shamrock Unittests world_size = 1
        run: |
          cd build
          ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 2
        run: |
          cd build
          mpirun -n 2 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd build
          mpirun --oversubscribe -n 3 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 4
        run: |
          cd build
          mpirun --oversubscribe -n 4 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest



  shamrock_opensycl_rocm:
    name: OpenSYCL rocm clang-${{ matrix.clang }}
    runs-on: [self-hosted, cuda1102rocm543]

    strategy:
      matrix:
        clang: [15,16]
        cuda: [11.0.2]
        rocm: [5.4.3]
    #if: false
  
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
  
      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-clang-${{ matrix.clang }}-${{matrix.cuda}}-${{matrix.rocm}}
  
      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar
  
      - name: ls local
        run : ls -la
  
      - name: install boost
        run: sudo apt install libboost-all-dev
  

      - name: install ROCm
        run: |
          [[ ${{matrix.rocm}} == 4.0.1 ]] && CODENAME=xenial
          [[ ${{matrix.rocm}} == 5.4.3 ]] && CODENAME=focal
          sudo apt install -y libnuma-dev cmake unzip
          wget -q -O - https://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -
          echo "deb [arch=amd64] https://repo.radeon.com/rocm/apt/${{matrix.rocm}} $CODENAME main" | sudo tee /etc/apt/sources.list.d/rocm.list
          printf 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' | sudo tee /etc/apt/preferences.d/rocm-pin-600
          sudo apt update -y
          sudo apt install -y rocm-dev
      

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: install Ninja-build
        run: sudo apt install ninja-build
  
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --outdir build --cxxpath OpenSYCL_comp --compiler opensycl --profile hip-gfx906
  
      - name: compile Shamrock
        run: |
          cd build
          ninja
  
      - name: run Shamrock Unittests world_size = 1
        run: |
          cd build
          ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 2
        run: |
          cd build
          mpirun -n 2 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd build
          mpirun --oversubscribe -n 3 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 4
        run: |
          cd build
          mpirun --oversubscribe -n 4 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest

  shamrock_opensycl_cuda_nvcxx:
    name: OpenSYCL nvcxx ${{matrix.nvhpc}}, CUDA ${{matrix.cuda}}
    runs-on: [self-hosted, raw]

    strategy:
      matrix:
        nvhpc: [22.11]
        cuda: [11.8]

    if: false
  
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
  
      - name: 'Download Artifact'
        uses: actions/download-artifact@v3
        with:
          name: OpenSYCL_compiler-nvcxx--${{matrix.cuda}}-${{matrix.nvhpc}}
  
      - name: 'unTar opensycl'
        run: tar -xvf opensycl.tar
  
      - name: ls local
        run : ls -la
  
      - name: install boost
        run: sudo apt install libboost-all-dev
  

      - name: install nvcxx
        run: |
          MAJOR_VERSION=$(echo ${{matrix.nvhpc}} | sed 's/\..*//')
          MINOR_VERSION=$(echo ${{matrix.nvhpc}} | sed 's/.*\.//')
          wget -q https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64/nvhpc-${MAJOR_VERSION}-${MINOR_VERSION}_${{matrix.nvhpc}}_amd64.deb
          wget -q https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64/nvhpc-20${MAJOR_VERSION}_${{matrix.nvhpc}}_amd64.deb
          sudo apt install -y ./nvhpc-*

      - name: install Ninja-build
        run: sudo apt install ninja-build
  
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --outdir build --cxxpath OpenSYCL_comp --compiler opensycl --profile cuda-nvcxx
  
      - name: compile Shamrock
        run: |
          cd build
          ninja
  
      - name: run Shamrock Unittests world_size = 1
        run: |
          cd build
          ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 2
        run: |
          cd build
          mpirun -n 2 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd build
          mpirun --oversubscribe -n 3 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
  
      - name: run Shamrock Unittests world_size = 4
        run: |
          cd build
          mpirun --oversubscribe -n 4 ./shamrock_test --sycl-ls-map  --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest
