name: On PR

# Controls when the workflow will run
on:
  pull_request:
    types: [
      opened, # pull request is created
      #edited, # title, body, or the base branch of the PR is modified
      synchronize, # if commit pushed
      labeled, # a label is applied to the pull request
      unlabeled # a label is removed from the pull request
      ]

  #we do not use this one as the job is not launched on the corect branch (aka we cannot test the CI in PRs)
  #pull_request_target:
  #  types: [opened,edited,synchronize,labeled]

jobs:

  #detect_changes:
  #  name: "Change detect"
  #  uses: ./.github/workflows/detect_changes.yml

  src_check:
    name: Linting
    #needs: [detect_changes]
    uses: ./.github/workflows/source_checks.yml

  
  #make shamrock documentation
  make_documentation:
    name: Doc
    needs: [src_check]
    uses: ./.github/workflows/make_documentation.yml

  doxygen_warn_main:
    name: Doxygen Main branch
    needs: [make_documentation]
    runs-on: [self-hosted,  docker-runner]

    container:
      image: ghcr.io/shamrock-code/ci-ubuntu20:main
      
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name : Install pck (doxygen)
        run: |
          sudo apt-get install -y -qq doxygen graphviz

      - name : Run doxygen
        run: |
          cd doc/doxygen
          doxygen dox.conf

      - name: Archive doxygen warnings
        uses: actions/upload-artifact@v4
        with:
          name: doxygen_warning_main
          path: doc/doxygen/warn_doxygen.txt

  doxygen_diff:
    name: Doxygen Diff
    needs: [doxygen_warn_main]

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: 'Download PR doxygen warning'
        uses: actions/download-artifact@v4
        with:
          name: doxygen_warning
          path: PR_dox_output

      - name: 'Download PR doxygen warning'
        uses: actions/download-artifact@v4
        with:
          name: doxygen_warning_main
          path: main_dox_output

      - name: 'ls PR_dox_output'
        run: |
          ls PR_dox_output

      - name: 'ls main_dox_output'
        run: |
          ls main_dox_output
          
      - name: 'Diff'
        run: |
          python3 buildbot/doxygen_diff.py main_dox_output/warn_doxygen.txt PR_dox_output/warn_doxygen.txt > out_diff.md

      - name: 'cat diff'
        run: |
          cat out_diff.md

      - name: Comment doxygen diff on PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: out_diff.md
          comment_tag: doxygen_diff
          mode: recreate
          create_if_not_exists: true


  shamrock_linux_acpp:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-clang15.yml

  shamrock_linux_acpp_pylib:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-clang15-py.yml

  shamrock_linux_acpp_macos:
    needs: [src_check]
    name: Tests
    if: contains(github.event.pull_request.labels.*.name, 'test-macos') 
    uses: ./.github/workflows/shamrock-acpp-macos.yml

  shamrock_linux_acpp_asan:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-clang15-asan.yml

  shamrock_linux_acpp_ubsan:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-clang15-ubsan.yml

  shamrock_linux_acpp_tidy:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-clang15-tidy.yml

  shamrock_linux_acpp_cov:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-clang15-coverage.yml
    
  shamrock_linux_dpcpp:
    needs: [src_check]
    name: Tests
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-dpcpp.yml
  
  shamrock_linux_acpp_phystests:
    needs: [shamrock_linux_acpp]
    name: Tests (Phys)
    if: ${{!contains(github.event.pull_request.labels.*.name, 'no-src-change ')}}
    uses: ./.github/workflows/shamrock-acpp-phys-test.yml
