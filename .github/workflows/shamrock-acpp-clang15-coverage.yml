name: Acpp/clang15 (Coverage)


on:
  workflow_call:


jobs:

  shamrock_acpp_omp_debug_coverage:
    name: AdaptiveCpp coverage omp clang-${{ matrix.clang }}
    runs-on: [self-hosted, ubuntu20]

    strategy:
      matrix:
        clang: [15]
        cuda: [11.0.2]
        rocm: [5.4.3]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ls local
        run : ls -la

      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build coverage \
            --builddir acpp_omp_debug --cxxpath /home/docker/compilers/AdaptiveCpp_clang${{matrix.clang}} --compiler acpp --profile omp

      - name: Pull reference files
        run: |
          cd acpp_omp_debug
          git clone https://github.com/Shamrock-code/reference-files.git

      - name: compile Shamrock
        run: |
          cd acpp_omp_debug
          ninja

      - name: run Shamrock Unittests world_size = 1
        run: |
          cd acpp_omp_debug
          LLVM_PROFILE_FILE="utests_0_0.profraw" ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 2
        run: |
          cd acpp_omp_debug
          mpirun \
            -n 1 -x LLVM_PROFILE_FILE=utests_2_0.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_2_1.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi
      
      - name: run Shamrock Unittests world_size = 3
        run: |
          cd acpp_omp_debug
          mpirun --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_0.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_1.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_3_2.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: run Shamrock Unittests world_size = 4
        run: |
          cd acpp_omp_debug
          mpirun --oversubscribe \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_0.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_1.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_2.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi : \
            -n 1 -x LLVM_PROFILE_FILE=utests_4_3.profraw ./shamrock_test --sycl-ls-map --sycl-cfg 0:0 --unittest --loglevel 0 --benchmark-mpi

      - name: merge coverage reports
        run: |
          cd acpp_omp_debug
          llvm-profdata-15 merge -sparse utests_* -o utests.profdata

      - name: make coverage reports
        run: |
          cd acpp_omp_debug
          llvm-cov-15 report shamrock_test -instr-profile=utests.profdata \
              -ignore-filename-regex=".*external/|.*src/tests/|.*src/shamtest/|.*\main_test.cpp|.*\main.cpp|.*\aliases.hpp"\
               > coverage_list.txt
          llvm-cov-15 show shamrock_test -instr-profile=utests.profdata -format=html -output-dir=out_cov\
              -Xdemangler c++filt -Xdemangler -n \
              -ignore-filename-regex=".*external/|.*src/tests/|.*src/shamtest/|.*\main_test.cpp|.*\main.cpp|.*\aliases.hpp"
      
      - name: print coverage
        run: |
          cd acpp_omp_debug
          llvm-cov-15 report shamrock_test -instr-profile=utests.profdata \
              -ignore-filename-regex=".*external/|.*src/tests/|.*src/shamtest/|.*\main_test.cpp|.*\main.cpp|.*\aliases.hpp"\

      - name: Archive code coverage results 1
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-list-acpp_omp_debug
          path: acpp_omp_debug/coverage_list.txt

      - name: Archive code coverage results 2
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report-acpp_omp_debug
          path: acpp_omp_debug/out_cov/