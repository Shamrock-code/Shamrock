// -------------------------------------------------------//
//
// SHAMROCK code for hydrodynamics
// Copyright (c) 2021-2024 Timothée David--Cléris <tim.shamrock@proton.me>
// SPDX-License-Identifier: CeCILL Free Software License Agreement v2.1
// Shamrock is licensed under the CeCILL 2.1 License, see LICENSE for more information
//
// -------------------------------------------------------//

#pragma once

/**
 * @file TestDataList.hpp
 * @author Timothée David--Cléris (tim.shamrock@proton.me)
 * @brief
 */

#include "TestData.hpp"
#include <vector>

namespace shamtest::details {

    /// List of data generated by a test
    struct TestDataList {

        /// Held test data
        std::vector<TestData> test_data;

        // define member function here
        // to register test data

        /// Create a new TestData in this TestDataList and return a reference to it
        [[nodiscard]] inline TestData &new_dataset(std::string name) {
            test_data.push_back(TestData{std::move(name), {}});
            return test_data.back();
        }

        /// Serialize the assertion in JSON
        std::string serialize_json();
        /// Serialize the assertion in binary format
        void serialize(std::basic_stringstream<byte> &stream);
        /// DeSerialize the assertion from binary format
        static TestDataList deserialize(std::basic_stringstream<byte> &reader);
    };

} // namespace shamtest::details
