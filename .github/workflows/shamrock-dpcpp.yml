name: Shamrock (DPCPP)


on:
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

    
jobs:
  shamrock_dpcpp_nativecpu:
    name: DPCPP Native CPU
    runs-on: [self-hosted,  docker-runner]

    container:
      image: ghcr.io/shamrock-code/ci-ubuntu20cuda11dpcpp:main
      

    #for now this is quite buggy
    if: false
    
    steps:

      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD 
      #### End Checkout part ####

      - name : Check binary
        run: |
          /home/docker/compilers/DPCPP/bin/clang++ --version
      
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --builddir build --cxxpath /home/docker/compilers/DPCPP --compiler intel_llvm --profile native_cpu

      - name: compile Shamrock
        run: |
          cd build
          ninja

      - name: run Shamrock
        run: |
          cd build
          export DPCPP_HOME=/home/docker/compilers/DPCPP
          export PATH=$DPCPP_HOME/bin:$PATH
          export LD_LIBRARY_PATH=$DPCPP_HOME/lib:$LD_LIBRARY_PATH
          ./shamrock_test --sycl-cfg 0:0 --loglevel 0 --unittest


  shamrock_dpcpp_cuda:
    name: DPCPP CUDA ${{ matrix.cuda }}
    runs-on: [self-hosted,  docker-runner]

    container:
      image: ghcr.io/shamrock-code/ci-ubuntu20cuda11dpcpp:main
      

    strategy:
      matrix:
        cuda: [11.0.2]
    
    steps:
    
      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD 
      #### End Checkout part ####

      - name : Check binary
        run: |
          /home/docker/compilers/DPCPP/bin/clang++ --version

      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --builddir build --cxxpath /home/docker/compilers/DPCPP --compiler intel_llvm --profile cuda \
            --cxxflags="--cuda-path=/opt/cuda" --cmakeargs="-DSHAMROCK_USE_SHARED_LIB=off"

      - name: Pull reference files
        run: |
          cd build
          git clone https://github.com/Shamrock-code/reference-files.git

      - name: compile Shamrock
        run: |
          cd build
          export DPCPP_HOME=/home/docker/compilers/DPCPP
          export PATH=$DPCPP_HOME/bin:$PATH
          export LD_LIBRARY_PATH=$DPCPP_HOME/lib:$LD_LIBRARY_PATH
          ninja

      # no device to run on
      #- name: run Shamrock
      #  run: |
      #    cd build
      #    export DPCPP_HOME=/home/docker/compilers/DPCPP
      #    export PATH=$DPCPP_HOME/bin:$PATH
      #    export LD_LIBRARY_PATH=$DPCPP_HOME/lib:$LD_LIBRARY_PATH
      #    export ONEAPI_DEVICE_SELECTOR=ext_intel_esimd_emulator:gpu
      #    ./shamrock_test --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest


  shamrock_dpcpp_hip:
    name: DPCPP HIP ROCM ${{ matrix.rocm }}
    runs-on: [self-hosted,  docker-runner]

    container:
      image: ghcr.io/shamrock-code/ci-ubuntu20rocm543dpcpp:main
      
    strategy:
      matrix:
        rocm: [5.4.3]
    
    steps:
    
      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD 
      #### End Checkout part ####

      - name : Check binary
        run: |
          /home/docker/compilers/DPCPP/bin/clang++ --version

      
      - name: configure Shamrock
        run: |
          python3 buildbot/configure.py --gen ninja --tests --build release \
            --builddir build --cxxpath /home/docker/compilers/DPCPP --compiler intel_llvm --profile hip-gfx906 \
            --cxxflags="--rocm-path=/opt/rocm" --cmakeargs="-DSHAMROCK_USE_SHARED_LIB=off"

      - name: Pull reference files
        run: |
          cd build
          git clone https://github.com/Shamrock-code/reference-files.git

      - name: compile Shamrock
        run: |
          cd build
          export DPCPP_HOME=/home/docker/compilers/DPCPP
          export PATH=$DPCPP_HOME/bin:$PATH
          export LD_LIBRARY_PATH=$DPCPP_HOME/lib:$LD_LIBRARY_PATH
          ninja

      # no device to run on
      #- name: run Shamrock
      #  run: |
      #    cd build
      #    export DPCPP_HOME=/home/docker/compilers/DPCPP
      #    export PATH=$DPCPP_HOME/bin:$PATH
      #    export LD_LIBRARY_PATH=$DPCPP_HOME/lib:$LD_LIBRARY_PATH
      #    export ONEAPI_DEVICE_SELECTOR=ext_intel_esimd_emulator:gpu
      #    ./shamrock_test --sycl-cfg 0:0 --loglevel 0 --benchmark-mpi --unittest